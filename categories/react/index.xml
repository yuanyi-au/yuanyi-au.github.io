<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on 方圆</title>
    <link>https://yuanyi-au.github.io/categories/react/</link>
    <description>Recent content in React on 方圆</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2021 Yuanyi. All rights reserved.</copyright>
    <lastBuildDate>Thu, 23 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://yuanyi-au.github.io/categories/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React.js 小书 - 笔记</title>
      <link>https://yuanyi-au.github.io/posts/reactjsbook/</link>
      <pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://yuanyi-au.github.io/posts/reactjsbook/</guid>
      <description>React.js 小书 - 笔记 React.js 小书在线阅读
React.js 基础知识 MVVM（Model-View-ViewModel）：是 MVC（Model View Controller） 的改进版，一种将图形用户界面开发与业务逻辑或后端逻辑的开发分离开来的软件架构模式。
 Model层：请求的原始数据 View层：视图展示，由ViewController来控制 ViewModel层：负责业务处理和数据转化  可以参考 什么是MVVM
React 只是一个库，而不是框架，它只提供 UI 也就是 View 层面的解决方案，需要结合其它的库（如 Redux、React-router ）来协助提供完整的解决方法。
JSX 一个 DOM 元素包含的信息其实只有三个：标签名，属性，子元素，这些信息既可以用 HTML 也可以用 JS 来描述，但 HTML 写起来比 JS 简便许多。 于是 React.js 把 JS 语法扩展了一下，支持直接在 JS 代码里面编写类似 HTML 标签结构的语法，也就是 JSX。JSX 在编译的时候会变成相应的 JavaScript 对象描述。
ReactDOM.render(&amp;lt;Header /&amp;gt;, document.getElementById(&#39;root&#39;))//会被编译成：ReactDOM.render(React.createElement(Header, null), document.getElementById(&#39;root&#39;))从 JSX 到页面经历的过程：
不直接从 JSX 直接渲染构造 DOM 结构的原因：</description>
    </item>
    
  </channel>
</rss>
